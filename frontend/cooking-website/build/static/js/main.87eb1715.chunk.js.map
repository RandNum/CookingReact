{"version":3,"sources":["http-common.js","services/recipe.service.js","components/add-recipe.component.js","components/recipe.component.js","components/recipes-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddRecipe","props","onChangeTitle","bind","onChangeDescription","saveRecipe","newRecipe","state","description","published","submitted","e","this","setState","target","value","RecipeDataService","then","response","console","log","catch","className","onClick","newTutorial","htmlFor","type","required","onChange","name","saveTutorial","Component","Recipe","getRecipe","updatePublished","updateRecipe","deleteRecipe","currentRecipe","message","match","params","prevState","status","update","history","push","RecipesList","onChangeSearchTitle","retrieveRecipes","refreshList","setActiveRecipe","removeAllRecipes","searchTitle","recipes","currentIndex","getAll","recipe","index","deleteAll","findByTitle","placeholder","map","to","App","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87eb1715.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass RecipeDataService {\n  getAll() {\n    return http.get(\"/recipes\");\n  }\n\n  get(id) {\n    return http.get(`/recipes/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/recipes\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/recipes/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/recipes/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/recipes`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/recipes?title=${title}`);\n  }\n}\n\nexport default new RecipeDataService();","import React, { Component } from \"react\";\nimport RecipeDataService from \"../services/recipe.service\";\n\nexport default class AddRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveRecipe = this.saveRecipe.bind(this);\n    this.newRecipe = this.newRecipe.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveRecipe() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    RecipeDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newRecipe() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"submit-form\">\n          {this.state.submitted ? (\n            <div>\n              <h4>You submitted successfully!</h4>\n              <button className=\"btn btn-success\" onClick={this.newTutorial}>\n                Add\n              </button>\n            </div>\n          ) : (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  required\n                  value={this.state.title}\n                  onChange={this.onChangeTitle}\n                  name=\"title\"\n                />\n              </div>\n  \n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  required\n                  value={this.state.description}\n                  onChange={this.onChangeDescription}\n                  name=\"description\"\n                />\n              </div>\n  \n              <button onClick={this.saveTutorial} className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n          )}\n        </div>\n      );\n  }\n}","import React, { Component } from \"react\";\nimport RecipeDataService from \"../services/recipe.service\";\n\nexport default class Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getRecipe = this.getRecipe.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateRecipe = this.updateRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n\n    this.state = {\n      currentRecipe: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getRecipe(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentRecipe: {\n          ...prevState.currentRecipe,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentRecipe: {\n        ...prevState.currentRecipe,\n        description: description\n      }\n    }));\n  }\n\n  getRecipe(id) {\n    RecipeDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentRecipe: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentRecipe.id,\n      title: this.state.currentRecipe.title,\n      description: this.state.currentRecipe.description,\n      published: status\n    };\n\n    RecipeDataService.update(this.state.currentRecipe.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentRecipe: {\n            ...prevState.currentRecipe,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateRecipe() {\n    RecipeDataService.update(\n      this.state.currentRecipe.id,\n      this.state.currentRecipe\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The recipe was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteRecipe() {    \n    RecipeDataService.delete(this.state.currentRecipe.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/recipes')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentRecipe } = this.state;\n\n    return (\n      <div>\n        {currentRecipe ? (\n          <div className=\"edit-form\">\n            <h4>Recipe</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentRecipe.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentRecipe.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentRecipe.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentRecipe.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteRecipe}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateRecipe}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Recipe...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport RecipeDataService from \"../services/recipe.service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class RecipesList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveRecipes = this.retrieveRecipes.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveRecipe = this.setActiveRecipe.bind(this);\n    this.removeAllRecipes = this.removeAllRecipes.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      recipes: [],\n      currentRecipe: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveRecipes();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveRecipes() {\n    RecipeDataService.getAll()\n      .then(response => {\n        this.setState({\n          recipes: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveRecipes();\n    this.setState({\n      currentRecipe: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveRecipe(recipe, index) {\n    this.setState({\n      currentRecipe: recipe,\n      currentIndex: index\n    });\n  }\n\n  removeAllRecipes() {\n    RecipeDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchTitle() {\n    RecipeDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          recipes: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, recipes, currentRecipe, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchTitle}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Recipes List</h4>\n\n          <ul className=\"list-group\">\n            {recipes &&\n              recipes.map((recipe, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveRecipe(recipe, index)}\n                  key={index}\n                >\n                  {recipe.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllRecipes}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentRecipe ? (\n            <div>\n              <h4>Recipe</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentRecipe.title}\n              </div>\n              <div>\n                <label>\n                  <strong>Description:</strong>\n                </label>{\" \"}\n                {currentRecipe.description}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentRecipe.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/recipes/\" + currentRecipe.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Recipe...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport AddRecipe from \"./components/add-recipe.component\";\nimport Recipe from \"./components/recipe.component\";\nimport RecipesList from \"./components/recipes-list.component\";\n\n\n\nclass App extends Component {\n  render(){\n  return (\n    <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/recipes\" className=\"navbar-brand\">\n            Cooking Recipes\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/recipes\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/recipes\"]} component={RecipesList} />\n            <Route exact path=\"/add\" component={AddRecipe} />\n            <Route path=\"/recipes/:id\" component={Recipe} />\n          </Switch>\n        </div>\n      </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import * as serviceWorker from \"./serviceWorker\";\n//import registerServiceWorker from 'react-service-worker'; //testing older versions of service worker reporting which is now replaced by webvitals\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//webvitals now replaces the older serviceWorkers\n//serviceWorker.unregister();\n//registerServiceWorker.unregister();"],"sourceRoot":""}